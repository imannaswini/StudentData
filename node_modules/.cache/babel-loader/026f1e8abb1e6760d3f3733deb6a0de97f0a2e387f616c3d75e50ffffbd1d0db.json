{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT HUB\\\\React Projects\\\\studentdata\\\\src\\\\CreateStudent.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateStudent() {\n  _s();\n  const navigate = useNavigate();\n  const [student, setStudent] = useState({\n    name: '',\n    place: '',\n    phone: ''\n  });\n  const handleChange = e => {\n    setStudent({\n      ...student,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Step 1: Fetch existing students\n      const res = await fetch('http://localhost:8000/students');\n      const students = await res.json();\n\n      // Step 2: Generate new ID\n      const maxId = students.length > 0 ? Math.max(...students.map(s => s.id || 0)) : 0;\n      const newStudent = {\n        id: maxId + 1,\n        ...student\n      };\n\n      // Step 3: POST the new student\n      await fetch('http://localhost:8000/students', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newStudent)\n      });\n      navigate('/');\n    } catch (error) {\n      console.error('Failed to create student:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-style\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: student.name,\n        onChange: handleChange,\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"place\",\n        value: student.place,\n        onChange: handleChange,\n        placeholder: \"Place\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        value: student.phone,\n        onChange: handleChange,\n        placeholder: \"Phone\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateStudent, \"wVSX6NqpLtSLOpTg5oYcf6aVs7w=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateStudent;\nvar _c;\n$RefreshReg$(_c, \"CreateStudent\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","CreateStudent","_s","navigate","student","setStudent","name","place","phone","handleChange","e","target","value","handleSubmit","preventDefault","res","fetch","students","json","maxId","length","Math","max","map","s","id","newStudent","method","headers","body","JSON","stringify","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","type","_c","$RefreshReg$"],"sources":["D:/GIT HUB/React Projects/studentdata/src/CreateStudent.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CreateStudent() {\r\n  const navigate = useNavigate();\r\n  const [student, setStudent] = useState({\r\n    name: '',\r\n    place: '',\r\n    phone: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setStudent({ ...student, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Step 1: Fetch existing students\r\n      const res = await fetch('http://localhost:8000/students');\r\n      const students = await res.json();\r\n\r\n      // Step 2: Generate new ID\r\n      const maxId = students.length > 0 ? Math.max(...students.map((s) => s.id || 0)) : 0;\r\n      const newStudent = { id: maxId + 1, ...student };\r\n\r\n      // Step 3: POST the new student\r\n      await fetch('http://localhost:8000/students', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newStudent),\r\n      });\r\n\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Failed to create student:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Add Student</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-style\">\r\n        <input name=\"name\" value={student.name} onChange={handleChange} placeholder=\"Name\" required />\r\n        <input name=\"place\" value={student.place} onChange={handleChange} placeholder=\"Place\" required />\r\n        <input name=\"phone\" value={student.phone} onChange={handleChange} placeholder=\"Phone\" required />\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}